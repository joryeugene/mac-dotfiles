[
  // Ctrl bindings
  {
    "key": "ctrl+t",
    "command": "workbench.action.tasks.runTask",
  },
  {
    "key": "ctrl+v",
    "command": "workbench.action.switchWindow",
  },
  {
    "key": "ctrl+,",
    "command": "workbench.action.focusFirstEditorGroup"
  },
  {
    "key": "ctrl+.",
    "command": "workbench.action.terminal.toggleTerminal"
  },
  {
    "key": "ctrl+[",
    "command": "workbench.action.previousEditor"
  },
  {
    "key": "ctrl+]",
    "command": "workbench.action.nextEditor"
  },
  {
    "key": "ctrl+e",
    "command": "workbench.view.explorer",
    "when": "!sideBarVisible"
  },
  {
    "key": "ctrl+e",
    "command": "workbench.action.toggleSidebarVisibility",
    "when": "sideBarVisible"
  },
  {
    "key": "ctrl+k",
    "command": "workbench.view.extension.figma",
    "when": "!terminalFocus"
  },
  {
    "key": "ctrl+g",
    "command": "workbench.view.scm",
    "when": "!terminalFocus"
  },
  {
    "key": "ctrl+l",
    "command": "learn-vim.focus",
  },
  {
    "key": "ctrl+m",
    "command": "workbench.action.toggleMaximizedPanel"
  },
  {
    "key": "ctrl+p",
    "command": "workbench.action.showCommands"
  },
  {
    "key": "ctrl+s",
    "command": "workbench.action.debug.stop",
    "when": "inDebugMode && neovim.mode != 'insert'"
  },
  {
    "key": "ctrl+shift+,",
    "command": "workbench.action.terminal.new",
    "when": "terminalProcessSupported || terminalWebExtensionContributedProfile"
  },
  {
    "key": "ctrl+shift+.",
    "command": "workbench.action.quickOpenTerm"
  },
  {
    "key": "ctrl+cmd+i",
    "command": "composer.newcomposeraction"
  },
  // Cmd bindings
  {
    "key": "cmd+d",
    "command": "workbench.action.terminal.split",
    "when": "terminalFocus && terminalProcessSupported || terminalFocus && terminalWebExtensionContributedProfile"
  },
  // Shift bindings
  {
    "key": "shift+h",
    "command": "workbench.action.previousEditor",
    "when": "editorTextFocus && neovim.mode != 'insert'"
  },
  {
    "key": "shift+l",
    "command": "workbench.action.nextEditor",
    "when": "editorTextFocus && neovim.mode != 'insert'"
  },
  // Space leader bindings
  {
    "key": "space",
    "command": "type",
    "args": {
      "text": " "
    },
    "when": "editorTextFocus && neovim.mode == 'insert'"
  },
  // Space + symbol bindings
  {
    "key": "space ,",
    "command": "aichat.fixerrormessage",
    "when": "editorTextFocus && neovim.mode != 'insert'"
  },
  {
    "key": "space .",
    "command": "editor.action.revealDefinition",
    "when": "editorHasDefinitionProvider && editorTextFocus && !isInEmbeddedEditor && neovim.mode != 'insert'"
  },
  {
    "key": "space /",
    "command": "editor.action.commentLine",
    "when": "editorTextFocus && !editorReadonly && neovim.mode != 'insert'"
  },
  {
    "key": "space '",
    "command": "editor.action.formatSelection",
    "when": "editorHasDocumentFormattingProvider && editorTextFocus && !editorReadonly && neovim.mode != 'insert'"
  },
  {
    "key": "space ;",
    "command": "editor.action.quickFix",
    "when": "editorHasCodeActionsProvider && editorTextFocus && !editorReadonly && neovim.mode != 'insert'"
  },
  {
    "key": "space \\",
    "command": "workbench.action.toggleStatusbarVisibility",
    "when": "editorTextFocus && neovim.mode != 'insert'"
  },
  {
    "key": "space =",
    "command": "editor.action.formatDocument",
    "when": "editorHasDocumentFormattingProvider && editorTextFocus && !editorReadonly && neovim.mode != 'insert'"
  },
  // {
  //   "key": "space -",
  //   "command": "workbench.action.navigateBack",
  //   "when": "editorTextFocus && neovim.mode != 'insert'"
  // },
  {
    "key": "space [",
    "command": "editor.action.marker.prev",
    "when": "editorTextFocus && neovim.mode != 'insert'"
  },
  {
    "key": "space ]",
    "command": "editor.action.marker.next",
    "when": "editorTextFocus && neovim.mode != 'insert'"
  },
  // Space + number bindings
  {
    "key": "space 1",
    "command": "workbench.action.openEditorAtIndex1",
    "when": "editorTextFocus && neovim.mode != 'insert'"
  },
  {
    "key": "space 2",
    "command": "workbench.action.openEditorAtIndex2",
    "when": "editorTextFocus && neovim.mode != 'insert'"
  },
  {
    "key": "space 3",
    "command": "workbench.action.openEditorAtIndex3",
    "when": "editorTextFocus && neovim.mode != 'insert'"
  },
  {
    "key": "space 4",
    "command": "workbench.action.openEditorAtIndex4",
    "when": "editorTextFocus && neovim.mode != 'insert'"
  },
  {
    "key": "space 5",
    "command": "workbench.action.openEditorAtIndex5",
    "when": "editorTextFocus && neovim.mode != 'insert'"
  },
  {
    "key": "space 6",
    "command": "workbench.action.openEditorAtIndex6",
    "when": "editorTextFocus && neovim.mode != 'insert'"
  },
  {
    "key": "space 7",
    "command": "workbench.action.openEditorAtIndex7",
    "when": "editorTextFocus && neovim.mode != 'insert'"
  },
  {
    "key": "space 8",
    "command": "workbench.action.openEditorAtIndex8",
    "when": "editorTextFocus && neovim.mode != 'insert'"
  },
  {
    "key": "space 9",
    "command": "workbench.action.openEditorAtIndex9",
    "when": "editorTextFocus && neovim.mode != 'insert'"
  },
  // Space + letter bindings (alphabetically sorted)
  {
    "key": "space a",
    "command": "vscode-neovim.send",
    "args": "ggVG",
    "when": "editorTextFocus && neovim.mode != 'insert'"
  },
  {
    "key": "space b",
    "command": "editor.debug.action.toggleBreakpoint",
    "when": "editorTextFocus && neovim.mode != 'insert'"
  },
  {
    "key": "space c",
    "command": "vscode-neovim.send",
    "args": "ciw",
    "when": "editorTextFocus && neovim.mode != 'insert'"
  },
  {
    "key": "space d",
    "command": "vscode-neovim.send",
    "args": ":put =strftime('%c')<CR>",
    "when": "editorTextFocus && neovim.mode != 'insert'"
  },
  {
    "key": "space e",
    "command": "workbench.view.explorer",
    "when": "editorTextFocus && neovim.mode != 'insert'"
  },
  {
    "key": "space f",
    "command": "workbench.action.openRecent",
    "when": "editorTextFocus && neovim.mode != 'insert'"
  },
  {
    "key": "space g d",
    "command": "editor.action.revealDefinition",
    "when": "editorHasDefinitionProvider && editorTextFocus && !isInEmbeddedEditor && neovim.mode != 'insert'"
  },
  {
    "key": "space g l",
    "command": "workbench.action.gotoLine",
    "when": "editorTextFocus && neovim.mode != 'insert'"
  },
  {
    "key": "space g g",
    "command": "workbench.action.gotoLine",
    "when": "editorTextFocus && neovim.mode != 'insert'"
  },
  {
    "key": "space g i",
    "command": "editor.action.goToImplementation",
    "when": "editorHasImplementationProvider && editorTextFocus && !isInEmbeddedEditor && neovim.mode != 'insert'"
  },
  {
    "key": "space g r",
    "command": "editor.action.goToReferences",
    "when": "editorHasReferenceProvider && editorTextFocus && !inReferenceSearchEditor && !isInEmbeddedEditor && neovim.mode != 'insert'"
  },
  {
    "key": "space g s",
    "command": "workbench.action.showAllSymbols",
    "when": "editorTextFocus && neovim.mode != 'insert'"
  },
  {
    "key": "space h",
    "command": "vscode-neovim.send",
    "args": ":noh<CR>",
    "when": "editorTextFocus && neovim.mode != 'insert'"
  },
  {
    "key": "space i e",
    "command": "editor.action.inlineSuggest.trigger",
    "when": "editorTextFocus && neovim.mode != 'insert'"
  },
  {
    "key": "space i c",
    "command": "composer.newcomposeraction",
    "when": "editorTextFocus && neovim.mode != 'insert'"
  },
  {
    "key": "space i f",
    "command": "aichat.fixerrormessage",
    "when": "editorTextFocus && neovim.mode != 'insert'"
  },
  {
    "key": "space i n",
    "command": "aichat.newchataction",
    "when": "editorTextFocus && neovim.mode != 'insert'"
  },
  {
    "key": "space j",
    "command": "workbench.action.openView",
    "when": "editorTextFocus && neovim.mode != 'insert'"
  },
  {
    "key": "space k",
    "command": "editor.action.showHover",
    "when": "editorTextFocus && neovim.mode != 'insert'"
  },
  {
    "key": "space l",
    "command": "vscode-neovim.send",
    "args": ":put =expand('%:p')<CR>",
    "when": "editorTextFocus && neovim.mode != 'insert'"
  },
  // {
  //   "key": "space m",
  //   "command": "vscode-neovim.send",
  //   "args": ":let @a = strftime('%Y-%m-%d')<CR>:edit! /Users/jory/Documents/calmhive/daily/<C-r>a.md<CR>",
  //   "when": "editorTextFocus && neovim.mode != 'insert'"
  // },
  {
    "key": "space n",
    "command": "workbench.action.files.newUntitledFile",
    "when": "editorTextFocus && neovim.mode != 'insert'"
  },
  {
    "key": "space o",
    "command": "workbench.action.quickOpen",
    "when": "editorTextFocus && neovim.mode != 'insert'"
  },
  {
    "key": "space p",
    "command": "workbench.actions.view.problems",
    "when": "editorTextFocus && neovim.mode != 'insert'"
  },
  {
    "key": "space m",
    "command": "editor.action.toggleWordWrap",
    "when": "editorTextFocus && neovim.mode != 'insert'"
  },
  {
    "key": "space q a",
    "command": "workbench.action.closeAllEditors",
    "when": "editorTextFocus && neovim.mode != 'insert'"
  },
  {
    "key": "space q o",
    "command": "workbench.action.closeOtherEditors",
    "when": "editorTextFocus && neovim.mode != 'insert'"
  },
  {
    "key": "space r o",
    "command": "workbench.panel.testResults.view.focus",
    "when": "editorTextFocus && neovim.mode != 'insert'"
  },
  {
    "key": "space r c",
    "command": "python.configureTests",
    "when": "editorTextFocus && neovim.mode != 'insert'"
  },
  {
    "key": "space r d",
    "command": "workbench.action.debug.start",
    "when": "editorTextFocus && neovim.mode != 'insert'"
  },
  {
    "key": "space r t",
    "command": "testing.runCurrentFile",
    "when": "editorTextFocus && neovim.mode != 'insert'"
  },
  {
    "key": "space r n",
    "command": "workbench.action.debug.run",
    "when": "editorTextFocus && neovim.mode != 'insert'"
  },
  // s bindings
  {
    "key": "space s v",
    "command": "workbench.action.splitEditor",
    "when": "editorTextFocus && neovim.mode != 'insert'"
  },
  {
    "key": "space s h",
    "command": "workbench.action.splitEditorOrthogonal",
    "when": "editorTextFocus && neovim.mode != 'insert'"
  },
  {
    "key": "space s s",
    "command": "workbench.action.gotoSymbol",
    "when": "editorTextFocus && neovim.mode != 'insert'"
  },
  {
    "key": "space s f",
    "command": "workbench.action.findInFiles",
    "when": "editorTextFocus && neovim.mode != 'insert'"
  },
  // t bindings
  {
    "key": "space t t",
    "command": "workbench.action.terminal.toggleTerminal",
    "when": "editorTextFocus && neovim.mode != 'insert'"
  },
  {
    "key": "space t m",
    "command": "workbench.action.toggleMaximizedPanel",
    "when": "editorTextFocus && neovim.mode != 'insert'"
  },
  {
    "key": "space t n",
    "command": "workbench.action.terminal.new",
    "when": "editorTextFocus && neovim.mode != 'insert'"
  },
  {
    "key": "space t k",
    "command": "workbench.action.terminal.kill",
    "when": "editorTextFocus && neovim.mode != 'insert'"
  },
  {
    "key": "space u",
    "command": "vscode-neovim.send",
    "args": "gUiw",
    "when": "editorTextFocus && neovim.mode != 'insert'"
  },
  {
    "key": "space v",
    "command": "-workbench.action.switchWindow",
    "when": "editorTextFocus && neovim.mode != 'insert'"
  },
  {
    "key": "space w",
    "command": "workbench.action.files.save",
    "when": "editorTextFocus && neovim.mode != 'insert'"
  },
  {
    "key": "space x",
    "command": "workbench.action.closeActiveEditor",
    "when": "editorTextFocus && neovim.mode != 'insert'"
  },
  {
    "key": "space y g",
    "command": "workbench.action.openGlobalKeybindings",
    "when": "editorTextFocus && neovim.mode != 'insert'"
  },
  {
    "key": "space y s",
    "command": "workbench.action.openSettingsJson",
    "when": "editorTextFocus && neovim.mode != 'insert'"
  },
  {
    "key": "space y k",
    "command": "workbench.action.openGlobalKeybindingsFile",
    "when": "editorTextFocus && neovim.mode != 'insert'"
  },
  {
    "key": "space y r",
    "command": "workbench.action.reloadWindow",
    "when": "editorTextFocus && neovim.mode != 'insert'"
  },
  {
    "key": "space y y",
    "command": "workbench.action.openGlobalSettings",
    "when": "editorTextFocus && neovim.mode != 'insert'"
  },
  {
    "key": "space y c",
    "command": "vscode.open",
    "args": "/Users/jory/.config/nvim/lua/config/core.lua",
    "when": "editorTextFocus && neovim.mode != 'insert'"
  },
  {
    "key": "space y n",
    "command": "vscode.open",
    "args": "/Users/jory/.config/nvim/lua/config/nvim.lua",
    "when": "editorTextFocus && neovim.mode != 'insert'"
  },
  {
    "key": "space y v",
    "command": "vscode.open",
    "args": "/Users/jory/.config/nvim/lua/config/vscode.lua",
    "when": "editorTextFocus && neovim.mode != 'insert'"
  },
  {
    "key": "space y z",
    "command": "vscode.open",
    "args": "/Users/jory/.zshrc",
    "when": "editorTextFocus && neovim.mode != 'insert'"
  },
  {
    "key": "space z",
    "command": "workbench.action.toggleZenMode",
    "when": "editorTextFocus && neovim.mode != 'insert'"
  },
  // remove bindings
  {
    "key": "cmd+i",
    "command": "-workbench.action.chat.stopListeningAndSubmit",
    "when": "inChatInput && voiceChatInProgress && scopedVoiceChatInProgress == 'editor' || inChatInput && voiceChatInProgress && scopedVoiceChatInProgress == 'inline' || inChatInput && voiceChatInProgress && scopedVoiceChatInProgress == 'quick' || inChatInput && voiceChatInProgress && scopedVoiceChatInProgress == 'terminal' || inChatInput && voiceChatInProgress && scopedVoiceChatInProgress == 'view' || inlineChatFocused && voiceChatInProgress && scopedVoiceChatInProgress == 'editor' || inlineChatFocused && voiceChatInProgress && scopedVoiceChatInProgress == 'inline' || inlineChatFocused && voiceChatInProgress && scopedVoiceChatInProgress == 'quick' || inlineChatFocused && voiceChatInProgress && scopedVoiceChatInProgress == 'terminal' || inlineChatFocused && voiceChatInProgress && scopedVoiceChatInProgress == 'view'"
  },
  {
    "key": "cmd+i",
    "command": "-workbench.action.chat.startVoiceChat",
    "when": "chatIsEnabled && hasSpeechProvider && inChatInput && !chatSessionRequestInProgress && !editorFocus && !notebookEditorFocused && !scopedVoiceChatGettingReady && !speechToTextInProgress && !terminalChatActiveRequest || chatIsEnabled && hasSpeechProvider && inlineChatFocused && !chatSessionRequestInProgress && !editorFocus && !notebookEditorFocused && !scopedVoiceChatGettingReady && !speechToTextInProgress && !terminalChatActiveRequest"
  },
  {
    "key": "cmd+i",
    "command": "-workbench.action.terminal.chat.focusInput",
    "when": "terminalChatFocus && !inlineChatFocused"
  },
  {
    "key": "cmd+i",
    "command": "-inlineChat.start",
    "when": "editorFocus && inlineChatHasProvider && !editorReadonly"
  },
  {
    "key": "cmd+i",
    "command": "-workbench.action.terminal.chat.start",
    "when": "terminalChatAgentRegistered && terminalFocusInAny && terminalHasBeenCreated || terminalChatAgentRegistered && terminalFocusInAny && terminalProcessSupported"
  },
  {
    "key": "space backspace",
    "command": "vscode-neovim.send",
    "args": "diw",
    "when": "editorTextFocus && neovim.mode != 'insert'"
  },
  {
    "key": "ctrl+f",
    "command": "-workbench.action.terminal.focusFindWidget",
    "when": "terminalFindFocused && terminalHasBeenCreated || terminalFindFocused && terminalProcessSupported || terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
  }
]
